//Breakpoints
@mixin breakpoint($width) {
  @media screen and (min-width: $width) {
    @content;
  }
}

//Img
@mixin bg($size: cover, $pos: center, $repeat: no-repeat) {
  background-repeat: #{$repeat};
  background-size: #{$size};
  background-position: #{$pos};
}

//Mask-img
@mixin mask-bg($size: cover, $pos: center, $repeat: no-repeat) {
  mask-repeat: #{$repeat};
  mask-size: #{$size};
  mask-position: #{$pos};
}

@mixin padding-hack($padding: 50%, $after: true) {
  @if ($after) {
    &::after {
      content: '';
      display: block;
      padding-top: $padding;
    }
  } @else {
    &::before {
      content: '';
      display: block;
      padding-top: $padding;
    }
  }
}

@mixin loading() {
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle farthest-corner at center, $color_accent, $color_accent_light 85%);
    background-size: 600% 100%;
    animation: preloader 4s ease infinite;
    transform: scale(2) rotate(210deg);
    z-index: 2;
  }
}

@mixin fake($after: true) {
  position: relative;
  @if ($after) {
    &::after {
      content: '';
      position: absolute;
      @content;
    }
  } @else {
    &::before {
      content: '';
      position: absolute;
      @content;
    }
  }
}

//Fonts
@mixin fs($title) {
  @if ($title == 'logo-descr') {
    font-size: $font_logo_descr_mobile;
    font-weight: 500;
    color: $textblue;
    @include breakpoint($tablet) {
      font-size: $font_logo_descr_tablet;
    }
  }
  @if ($title == 'banners-title') {
    color: $color_white;
    font-size: $font_banners_title_mobile;
    @include breakpoint($tablet) {
      font-size: $font_banners_title_tablet;
      max-width: 650px;
    }
    @include breakpoint($tablet_medium) {
      font-size: $font_banners_title_tablet_m;
      max-width: 750px;
    }
  }
  @if ($title == 'btn-title') {
    color: $color_white;
    font-size: $font_btn_title_mobile;
    font-weight: 500;
    @include breakpoint($tablet) {
      font-size: $font_btn_title_tablet;
    }
  }
  @if ($title == 'nav-item') {
    font-weight: 600;
    line-height: 34px;
    color: $textblue;
    font-size: $font_nav_title_mobile;
    @include breakpoint($tablet) {
      color: $color_white;
      font-weight: 500;
    }
    @include breakpoint($tablet_medium) {
      font-size: $font_nav_title_tablet_m;
    }
  }
  @if ($title == 'h2') {
    position: relative;
    text-align: center;
    color: $textblue;
    padding: 35px 0 25px;
    font-size: $font_h2_mobile;
    font-weight: 500;
    &::after {
      content: '';
      position: absolute;
      bottom: 16px;
      left: 0;
      right: 0;
      display: block;
      margin: 0 auto;
      width: 95px;
      height: 3px;
      background-color: $color_accent;
    }
    @include breakpoint($tablet) {
      padding: 65px 0 40px;
      font-size: $font_h2_tablet;
      &::after {
        bottom: 26px;
      }
    }
    @include breakpoint($desktop) {
      font-size: $font_h2_desktop;
      &::after {
        bottom: 13px;
      }
    }
  }
  @if ($title == 'item-title') {
    color: $textblue;
    font-weight: 500;
    font-size: $font_info_item_title_mobile;
    @include breakpoint($tablet) {
      font-size: $font_info_item_title_tablet;
    }
  }
  @if ($title == 'item') {
    color: $textgray;
    font-size: $font_info_item_mobile;
    @include breakpoint($tablet) {
      font-size: $font_info_item_tablet;
      line-height: 20px;
    }
  }
  @if ($title == 'consent') {
    color: $textblue;
    font-size: $font_consent_mobile;
    a {
      color: $color_accent;
      font-size: $font_consent_mobile;
      text-decoration: none;
      &:hover {
        transition: 0.3s;
        opacity: 0.7;
      }
    }
    @include breakpoint($tablet) {
      font-size: $font_consent_tablet;
      a {
        font-size: $font_consent_tablet;
      }
    }
  }
  @if ($title == 'copyright') {
    color: $color_accent;
    font-weight: 500;
    font-size: $font_copyright_mobile;
    line-height: 22px;
    a {
      color: $color_accent;
      font-size: $font_copyright_mobile;
      &:hover {
        transition: 0.3s;
        opacity: 0.7;
      }
    }
    @include breakpoint($tablet) {
      font-size: $font_copyright_tablet;
      a {
        font-size: $font_copyright_tablet;
      }
    }
  }
  @if ($title == 'cookie') {
    color: $color_white;
    font-size: $font_cookie_mobile;
    @include breakpoint($tablet) {
      font-size: $font_cookie_tablet;
    }
  }
  @if ($title == 'info') {
    font-size: $font_info_mobile;
    color: $textblue;
    font-weight: 500;
    line-height: 22px;
    a {
      font-size: $font_info_mobile;
      color: $textblue;
      text-decoration: none;
      line-height: 22px;
      &:hover {
        transition: 0.3s;
        color: $color_accent;
      }
    }
    @include breakpoint($tablet) {
      font-size: $font_info_tablet;
      a {
        font-size: $font_info_tablet;
      }
    }
    @include breakpoint($tablet_medium) {
      font-size: $font_info_tablet_m;
      line-height: 26px;
      a {
        font-size: $font_info_tablet_m;
        line-height: 26px;
      }
    }
    @include breakpoint($desktop) {
      font-size: $font_info_desktop;
      a {
        font-size: $font_info_desktop;
      }
    }
  }
}

//Transition
@mixin transition($type: all) {
  transition: #{$type} 0.3s ease-in-out;
}

//Gradient text
@mixin gradient_text($from, $to) {
  //add rotate
  background: linear-gradient(#{$from} 0%, #{$to} 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}
@mixin gradient($rotate: 0, $from, $to) {
  //add rotate
  background: linear-gradient(#{$rotate}, #{$from} 0%, #{$to} 100%);
}

@mixin btn() {
  padding: 12px 24px;
  border-radius: $little_radius;
  background-color: $color_accent;
  box-shadow: inset 0 0 0 2px $color_accent;
  border: 0;
  box-sizing: border-box;
  margin: 1em;
  outline: none;
  cursor: pointer;
  // Required, since we're setting absolute on pseudo-elements
  position: relative;
  vertical-align: middle;

  &::before,
  &::after {
    box-sizing: inherit;
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
  }

  //Hover Effect
  transition: color 0.25s;

  &::before,
  &::after {
    // Set border to invisible, so we don't see a 4px border on a 0x0 element before the transition starts
    border: 2px solid transparent;
    width: 0;
    height: 0;
  }

  // This covers the top & right borders (expands right, then down)
  &::before {
    top: 0;
    left: 0;
  }

  // And this the bottom & left borders (expands left, then up)
  &::after {
    bottom: 0;
    right: 0;
  }

  // Hover styles
  &:hover::before,
  &:hover::after {
    width: 100%;
    height: 100%;
  }

  &:hover::before {
    border-top-color: $color_white; // Make borders visible
    border-right-color: $color_white;
    transition: width 0.25s ease-out,
      // Width expands first
      height 0.25s ease-out 0.25s; // And then height
    border-radius: $little_radius;
  }

  &:hover::after {
    border-bottom-color: $color_white; // Make borders visible
    border-left-color: $color_white;
    transition: border-color 0s ease-out 0.5s,
      // Wait for ::before to finish before showing border
      width 0.25s ease-out 0.5s,
      // And then exanding width
      height 0.25s ease-out 0.75s; // And finally height
    border-radius: $little_radius;
  }
  &.parallel {
    &:hover {
      color: $color_white;
    }

    // Start ::after in same position as ::before
    &::after {
      top: 0;
      left: 0;
    }

    &:hover::after {
      transition: // Animate height first, then width
        height 0.25s ease-out, width 0.25s ease-out 0.25s;
    }
  }
}
